const { google } = require("googleapis");
const fs = require("fs");

const auth = new google.auth.GoogleAuth({
  keyFile: "credentials.json",
  scopes: ["https://www.googleapis.com/auth/drive"],
});
const drive = google.drive({ version: "v3", auth });

async function downloadFile(fileId, destinationPath) {
  const response = await drive.files.get(
    { fileId, alt: "media" },
    { responseType: "stream" }
  );
  const dest = fs.createWriteStream(destinationPath);
  return new Promise((resolve, reject) => {
    response.data
      .on("end", () => {
        console.log("File downloaded successfully");
        resolve();
      })
      .on("error", (err) => {
        console.error("Error downloading file", err);
        reject(err);
      })
      .pipe(dest);
  });
}

async function uploadFile(filePath, parentId) {
  const fileMetadata = {
    name: "UploadedVideo.mp4", // Change to your desired file name
    parents: [parentId],
  };
  const media = {
    mimeType: "video/mp4", // Change according to your file type
    body: fs.createReadStream(filePath),
  };
  const resumableUpload = await drive.files.create({
    requestBody: fileMetadata,
    media,
    fields: "id",
  });
  console.log("File uploaded successfully");
  return resumableUpload.data.id;
}

async function downloadAndUpload(sourceFileId, destinationFolderId) {
  const downloadPath = "./downloadedVideo.mp4"; // Change as needed
  const uploadPath = "./downloadedVideo.mp4"; // Change as needed

  await downloadFile(sourceFileId, downloadPath);
  const fileId = await uploadFile(uploadPath, destinationFolderId);
  return fileId;
}

module.exports = { downloadAndUpload };
